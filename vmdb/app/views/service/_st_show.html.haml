= render :partial => "layouts/flash_msg"
.row
  .col-sm-12.col-md-12.col-lg-12
    %table.style1
      %tr
        %td.key
          = _('Name')
        %td.notwide
          = @record.name
      %tr
        %td.key
          = _('Description')
        %td.notwide
          = @record.description
      %tr
        %td.key
          = _('Display')
        %td.notwide
          = @record.display ? "True" : "False"
- if @record.composite?
  .row
    .col-sm-12.col-md-12.col-lg-12
      %hr
      %h3
        = _('Resources')
      - resources = @record.service_resources
      - if !resources.empty?
        %table.table.table-bordered.table-striped.table-hover
          %thead
            %tr
              %th.narrow
              - titles = [_('Name'), _("Description"), _("Group Order")]
              - titles.each do |title|
                %th{:colspan => "1"}
                  = title
          %tbody
            - prev_group = 0
            - resources.sort_by { |rsc| [rsc.group_idx, rsc.resource_name.downcase] }.each_with_index do |r, i|
              - # add blank tr after each group
              - col_span = 4
              - if prev_group != r.group_idx && i < resources.length
                - prev_group = r.group_idx
                %tr#new_tr.seperator
                  %td{:colspan => col_span}
              %tr{:title => "Click to view details", :onclick => "sandt_tree.selectItem('#{x_node}_st-#{to_cid(r.resource_id)}', true);"}
                %td.narrow
                  %img{:src => "/images/icons/new/service_template.png"}
                - keys = %w(resource_name resource_description group_idx)
                - keys.each do |key|
                  %td
                    = key == "group_idx" ? "#{r.send(key) + 1}" : r.send(key)
      - else
        = _('No Resources found.')
- else
  .row
    .col-sm-12.col-md-12.col-lg-12
      %hr
      %h3
        = _('Request Info')
      = render(:partial => "miq_request/prov_wf",
        :locals         => {:wf => @miq_request.workflow_class.new({:src_vm_id => @miq_request.source_id}, session[:userid]),
          :show         => true})

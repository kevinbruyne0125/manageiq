<% url = url_for(:action => 'db_form_field_changed', :id=>"#{@db.id || "new"}") %>
<div id="form_div">
  <%= render(:partial=>"layouts/flash_msg", :locals=>{:top_pad=>10}) %>
  <% read_only = @edit && @edit[:db_id] && @edit[:db_id] ? true : false %>
    <p class="legend">Basic Information</p>
    <table class="style1">
      <tr>
        <td class="key"><% if read_only%>* <%end%>Name</td>
        <td class="wider">
          <%= text_field_tag("name",
                             @edit[:new][:name],
                             :maxlength=>50,
                             :disabled=>read_only,
                             "data-miq_observe"=>{:interval=>'.5', :url=>url}.to_json) %>
            <% if !read_only %>
              <%= javascript_tag("$('name').focus()") %>
          <% end %>
        </td>
      </tr>
      <tr>
        <td class="key">Tab Title</td>
        <td class="wider">
          <%= text_field_tag("description",
            @edit[:new][:description],
            :maxlength=>20,
            "data-miq_observe"=>{:interval=>'.5', :url=>url}.to_json) %>
        </td>
      </tr>
      <tr>
        <td class="key">Locked</td>
        <td>
          <%= check_box_tag("locked", value="1",
                             checked=@edit[:new][:locked],
                             "data-miq_observe_checkbox"=>{:url=>url}.to_json) %>
        </td>
      </tr>
    </table>
    <hr>
    <%= render :partial => "db_widgets" %>
  <% if read_only %> * Dashboard name cannot be changed<% end %>
</div>
<%# Need this to bind checkbox observers when under DHTMLX tabs %>
<%# TODO: Remove when DHTMLX tabs are converted to jQuery tabs  %>
<script>miqObserveCheckboxes();</script>

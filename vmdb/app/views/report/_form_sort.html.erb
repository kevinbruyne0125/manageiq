<% url = url_for(:action=>'form_field_changed', :id=>"#{@edit[:rpt_id] || "new"}") %>
<div id="sort_div">
  <p class="legend">Sort Criteria</p>
  <table class="style1">
    <tr>
      <td class="key">Sort the Report By</td>
      <td>
        <% if @sortby1.include?("__") && MiqReport.is_break_suffix?(@sortby1.split("__")[1]) %>
          <% sortby1 = @sortby1.split("__").first %>
        <% else %>
          <% sortby1 = @sortby1 %>
        <% end %>
        <%= select_tag('chosen_sort1', options_for_select([NOTHING_STRING] + @sort1, sortby1),
                      {:multiple=> false, :class=>"widthed",
                        "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                      "data-miq_observe"=>{:url=>url}.to_json}) %>
        <% unless MiqReport.get_col_break_suffixes(@sortby1.split("__").first).empty? %>
          <%= select_tag('sort1_suffix',
                        options_for_select([["<Original Value>", nil]] +
                                            MiqReport.get_col_break_suffixes(@sortby1.split("__").first),
                                          @sortby1.split("__")[1]),
                        :multiple=>false, :class=>"widthed",
                        "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                        "data-miq_observe"=>{:url=>url}.to_json) %>
        <% end %>
      </td>
    </tr>
    <% if @sortby1 != NOTHING_STRING %>
      <tr>
        <td class="key">Sort Order</td>
        <td>
          <%= select_tag('sort_order',
                        options_for_select(["Ascending","Descending"], @edit[:new][:order]),
                        :multiple=>false, :class=>"widthed",
                        "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                        "data-miq_observe"=>{:url=>url}.to_json) %>
        </td>
      </tr>
      <tr>
        <td class="key">Show Sort Breaks</td>
        <td>
          <%= select_tag('sort_group',
                        options_for_select(["No","Yes","Counts"], @edit[:new][:group]),
                        :multiple=>false, :class=>"widthed",
                        "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                        "data-miq_observe"=>{:url=>url}.to_json) %>
        </td>
      </tr>
      <% unless @edit[:new][:group] == "No" %>
        <tr>
          <td class="key">Hide Detail Rows</td>
          <td>
            <%= check_box_tag("hide_details", value="1",
                              checked=@edit[:new][:hide_details],
                              "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                              "data-miq_observe_checkbox"=>{:url=>url}.to_json)%>
          </td>
        </tr>
        <% ci = MiqReport.get_col_info(@sortby1) %>
        <% unless ci[:available_formats].empty? %>
          <tr>
            <td class="key">Format on Summary Row</td>
            <td>
              <%= select_tag('break_format',
                            options_for_select([["<None>", "_none_"],["<Reset to Default>", nil]] +
                                                Array(ci[:available_formats].invert).sort{|a,b| a.first <=> b.first},
                                              @edit[:new].fetch_path(:col_options, @sortby1.split("-").last, :break_format) || ci[:default_format]),
                            :multiple=>false, :class=>"widthed",
                            "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                            "data-miq_observe"=>{:url=>url}.to_json) %>
            </td>
          </tr>
  <% if false %><%# TODO: Commented out as this observe causes double transactions until we can undo the form observe %>
          <tr>
            <td class="key">Label on Summary Row</td>
            <td class="wide">
              <div id="break_label_div">
                <%= text_field_tag("break_label",
                                  @edit[:new].fetch_path(:col_options, @sortby1.split("-").last, :break_label).to_s,
                                  :maxlength=>100,
                                  "data-miq_observe"=>{:interval=>'.5', :url=>url}.to_json) %>
              </div>
            </td>
          </tr>
  <% end %>

          <% end %>
        <% end %>
      <% end %>
  </table>
    <% if @sortby1 != NOTHING_STRING %>
      <br/>
      <table class="style1">
        <tr>
          <td class="key">Within Above Field, Sort By</td>
          <td>
            <% if @sortby2.include?("__") && MiqReport.is_break_suffix?(@sortby2.split("__")[1]) %>
              <% sortby2 = @sortby2.split("__").first %>
            <% else %>
              <% sortby2 = @sortby2 %>
            <% end %>
            <%= select_tag('chosen_sort2', options_for_select([NOTHING_STRING] + @sort2, sortby2),
                          {:multiple=> false, :class=>"widthed",
                          "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                          "data-miq_observe"=>{:url=>url}.to_json}) %>
            <% unless MiqReport.get_col_break_suffixes(@sortby2.split("__").first).empty? %>
              <%= select_tag('sort2_suffix',
                            options_for_select([["<Original Value>", nil]] +
                                                MiqReport.get_col_break_suffixes(@sortby2.split("__").first),
                                              @sortby2.split("__")[1]),
                            {:multiple=>false, :class=>"widthed",
                            "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                            "data-miq_observe"=>{:url=>url}.to_json}) %>
            <% end %>
          </td>
        </tr>
        <tr>
          <td class="key">Number of Rows to Show</td>             <td>

            <% if @edit[:new][:group] == "No" %>
              <%= select_tag('row_limit',
                            options_for_select([["All", ""],
                                                ["First 5", "5"],
                                                ["First 10", "10"],
                                                ["First 20", "20"],
                                                ["First 50", "50"],
                                                ["First 100", "100"]],
                                              @edit[:new][:row_limit]),
                            {:multiple=> false, :class=>"widthed",
                            "data-miq_sparkle_on"=>true, "data-miq_sparkle_off"=>true,
                            "data-miq_observe"=>{:url=>url}.to_json}) %>
            <% else %>
              All
            <% end %>
          </td>
        </tr>
      </table>
    <% end %>
  <% unless @sortby1 == NOTHING_STRING || @edit[:new][:group] == "No" %>
    <fieldset>
      <p class="legend">Specify Calculations for Summary Rows</p>
      <table class="style3">
        <thead>
          <tr>
            <th>Column Name</th>
            <th>Header</th>
            <th>Calculations</th>
            <th>Selected</th>
          </tr>
        </thead>
        <tbody>
          <% @edit[:new][:field_order].each_with_index do |f, f_idx| %>
            <tr>
              <td class="key"><%= h(f.first) %></td>
              <td class="wide"><%= h(@edit[:new][:headers][f.last]) %></td>

              <% combo_id = "calc_id_#{f_idx}" %>
              <% combo_name = "calc_#{f_idx}" %>
              <td id="<%=combo_id%>"></td>
              <% ci = MiqReport.get_col_info(f.last.split("__").first) %>
              <td id="calc_<%= f_idx %>_div">
                <% if ci[:numeric] %>
                  <%= render(:partial=>'layouts/dhtmlxcombo',
                            :locals=>{:combo_id=>combo_id,
                                      :combo_name=>combo_name,
                                      :combo_url=>"/report/form_field_changed/#{@edit[:rpt_id] || "new"}",
                                      :combo_onchange=>"miqChangeIgnore",
                                      :combo_type=>"checkbox",
                                      :xml_combo=>@edit[:calc_xml][f_idx]
                                      })
                  %>
                    <% col = field_to_col(f.last) %>
                    <% if @edit[:new][:col_options][col] && @edit[:new][:col_options][col][:grouping] %>
                      <%= @edit[:new][:col_options][col][:grouping].collect{|c|c.to_s.titleize}.join(", ") %>
                    <% end %>
                <% end %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
  <% end %>
</div>

<% url = url_for(:action => 'dialog_field_changed', :id=>"#{@edit[:rec_id] || "new"}") %>
<%= render :partial => "layouts/dhtmlx_tags", :locals=>{:control=>"calendar"} %>
<%# if dialogs is selected %>
<%= render :partial => "layouts/flash_msg" %>
<dl class="col1">
	<dd>
		<div id="dialog_tabs" style="display:none;width:100%;height:100%;overflow:auto;" data-miq_url="_none_">
			<ul class="tab">
				<% @edit[:wf].dialog.dialog_tabs.each do |tab| %>
					<li><a href="#<%= tab.id%>_tab" title="<%= tab.description %>"><%= tab.label %></a></li>
				<% end %>
			</ul>
			<% @edit[:wf].dialog.dialog_tabs.each do |tab| %>
        <%= render :partial => "shared/dialogs/dialog_tab", :locals => {:tab => tab} %>
			<% end %>
		</div>
	</dd>
</dl>
<% if !@edit[:explorer] %>
  <%# show form buttons on non-explorer views %>
  <dl>
    <dd class="col1">
      <table width="100%">
        <tr>
          <td align="right">
            <%=  render :partial => "layouts/x_dialog_buttons", :locals => {:action_url =>"dialog_form_button_pressed", :record_id => @edit[:rec_id]} %>
          </td>
        </tr>
      </table>
    </dd>
  </dl>
<% end %>
<%# Initialize jQuery UI tabs based on tabs ul %>
<script>
	//method takes hash that can have 4 keys: tabs div id, active tab label,
	//url to go to when tab is changed, and whether to check for abandon changes or not
	miq_jquery_tabs_init({tabs_div: "dialog_tabs"})
</script>



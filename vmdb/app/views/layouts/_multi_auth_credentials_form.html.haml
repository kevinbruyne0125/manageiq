- validate_url ||= (record.id || @hostitems) ? "update" : "create"
- change_url ||= "form_field_changed"
- settab = @tabnum == nil ? "" : "a_tabbar.setTabActive('a#{@tabnum}');"
- legendtext ||= "Credentials"

%p.legend=_("#{legendtext}")
%div{:id => "auth_tabs", :style => "display:none;"}
  %ul{:class => "tab"}
    %li{"ng-click" => "assignDefaultUser()"}
      %a{:href => "#default"}=_('Default')
      -# Special tabs for EMS edit
    - if ["ems_cloud","ems_infra"].include?(params[:controller])
      - display = @emstype == "rhevm" ? "" : "none"
      %li{:id => "metrics_li", :style => "display:#{display};"}
        %a{:href => "#metrics"}=_('C & U Database')
      - display = @emstype == "openstack" ? "" : "none"
      %li{:id => "amqp_li", :style => "display:#{display};"}
        %a{:href => "#amqp"}=_('AMQP')
    - else
      %li{"ng-click" => "assignRemoteUser()"}
        %a{:href => "#remote"}=_('Remote Login')
      %li
        %a{:href => "#web"}=_('Web Services')
      %li
        %a{:href => "#ipmi"}=_('IPMI')

  %div{:id => "default", :name => "Default"}
    %table{:class => "style1"}
      %tbody
        -#= render(:partial => "/layouts/auth_credentials_form",
        -#         :locals  => {:pfx => "default",
        -#                      :change_url   => change_url,
        -#                      :validate_url => validate_url,
        -#                      :ujs_button   => true,
        -#                      :uid_label    => @emstype == "ec2" ? "Access Key ID" : nil,
        -#                      :pwd_label    => @emstype == "ec2" ? "Secret Access Key" : nil,
        -#                      :record       => record})
        = render :partial => "layouts/angular/auth_credentials_angular",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :ng_reqd_userid    => "hostModel.log_userid == ''",
                                              :ng_reqd_password  => "hostModel.log_password == ''",
                                              :ng_reqd_verify    => "hostModel.log_verify == ''",
                                              :validate_url      => validate_url,
                                              :id                => nil,
                                              :valtype           => "log",
                                              :basic_info_needed => true}
    %span{:style => "color:black"}
      Required. Should have privileged access, such as root or administrator.

  - if ["ems_cloud","ems_infra"].include?(params[:controller])
    %div{:id => "metrics", :name => "C & U Database"}
      %table{:class => "style1"}
        %tbody
          -#= render(:partial => "/layouts/auth_credentials_form",
          -#         :locals   => {:pfx          => "metrics",
          -#                       :change_url   => change_url,
          -#                       :validate_url => validate_url,
          -#                       :ujs_button   => true,
          -#                       :uid_label    => @edit[:new][:emstype] == "ec2" ? "Access Key ID" : nil,
          -#                       :pwd_label    => @edit[:new][:emstype] == "ec2" ? "Secret Access Key" : nil,
          -#                       :record       => record})
        %span{:style => "color:black"}
          Used to gather Capacity & Utilization metrics.
    %div{:id => "amqp", :name => "AMQP Messaging"}
      %table{:class => "style1"}
        %tbody
          -#= render(:partial => "/layouts/auth_credentials_form",
          -#         :locals  => {:pfx          => "amqp",
          -#                      :change_url   => change_url,
          -#                      :validate_url => validate_url,
          -#                      :ujs_button   => true,
          -#                      :record       => record})
      %span{:style => "color:black"}
        Used to authenticate with OpenStack AMQP Messaging Bus for event handling.
  - else
    %div{:id => "remote", :name => "Remote Login"}
      %table{:class => "style1"}
        %tbody
          -#= render(:partial => "/layouts/auth_credentials_form",
          -#         :locals  => {:pfx          => "remote",
          -#                      :change_url   => change_url,
          -#                      :validate_url => validate_url,
          -#                      :ujs_button   => true,
          -#                      :record       => record})
          = render :partial => "layouts/angular/auth_credentials_angular",
                               :locals  => {:ng_show           => true,
                                            :ng_model          => "hostModel",
                                            :ng_reqd_userid    => "hostModel.log_userid == ''",
                                            :ng_reqd_password  => "hostModel.log_password == ''",
                                            :ng_reqd_verify    => "hostModel.log_verify == ''",
                                            :validate_url      => validate_url,
                                            :id                => nil,
                                            :valtype           => "log",
                                            :basic_info_needed => true}
      %span{:style => "color:black"}
        Required if SSH login is disabled for the Default account.
    %div{:id => "web", :name => "Web Services"}
      %table{:class => "style1"}
        %tbody
          -#= render(:partial => "/layouts/auth_credentials_form",
          -#         :locals  => {:pfx          => "ws",
          -#                      :change_url   => change_url,
          -#                      :validate_url => validate_url,
          -#                      :ujs_button   => true,
          -#                      :record       => record})
      %span{:style => "color:black"}
        Used for access to Web Services.
    %div{:id => "ipmi", :name => "IPMI"}
      %table{:class => "style1"}
        %tbody
          -#= render(:partial => "/layouts/auth_credentials_form",
          -#           :locals  => {:pfx          => "ipmi",
          -#                        :change_url   => change_url,
          -#                        :validate_url => validate_url,
          -#                        :ujs_button   => true,
          -#                        :record       => record})
      %span{:style => "color:black"}
        Used for access to IPMI.
  - if !session[:host_items].nil?
    %table{:class => "admintable"}
      %tbody
        %tr
          %td{:class => "key"}Select Host to validate against
          %td
            = select_tag('validate_id',
                         options_for_select(@selected_hosts.invert.sort, @validate_against.to_i),
                        "data-miq_observe" => {:url => url_for(:action => 'form_field_changed',
                                                               :id     => "#{record.id || "new"}")}.to_json)



-#    <div id="default" name="Default" >
-#
-#    </div>
-#    <% if ["ems_cloud","ems_infra"].include?(params[:controller]) %><%# Special tab contents for EMS edit %>
-#      <div id="metrics" name="C & U Database" >
-#
-#      </div>
-#      <div id="amqp" name="AMQP Messaging" >
-#
-#      </div>
-#    <% else %>
-#      <div id="remote" name="Remote Login" >
-#
-#      </div>
-#      <div id="web" name="Web Services" >
-#
-#      </div>
-#      <div id="ipmi" name="IPMI" >
-#
-#      </div>
-#    </div>
-#  <% end %>
-#
-#  <% end %>
-#  <hr>

:javascript
  //method takes hash that can have 4 keys: tabs div id, active_tab label,
  //url to go to when tab is changed, and whether to check for abandon changes or not
  miq_jquery_tabs_init({tabs_div: "auth_tabs"})

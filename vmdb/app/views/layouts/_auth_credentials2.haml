-# locals:
-#  * validate      -- bool, display 'Validate' button
-#  * change_url    -- url for changes observation
-#  * validate_url  -- url for credentials validation
-#  * prefix        -- prefix for params

- prefix ||= ''
- pfx = prefix.blank? ? '' : prefix + '_'
- default_labels = { :user => 'User ID', 
  :password => 'Password', :password_verify => 'Verify Password', 
  :title => 'Validate the credentials' }
- labels         = defined?(labels) ? default_labels.update(labels||{}) : default_labels

%tr
  %td{:class => 'key'}
    =labels[:user]
  %td
    = text_field_tag("#{pfx}userid",
                     @edit[:new]["#{pfx}userid".to_sym],
                     :maxlength         => 50,
                     'data-miq_observe' => {:interval => '.5', 
                                            :url      => change_url }.to_json)
%tr
  %td{:class => 'key'}
    =labels[:password]
  %td
    = password_field_tag("#{pfx}password", @edit[:new]["#{pfx}password".to_sym],
                         :maxlength         => 50,
                         'data-miq_observe' => {:interval => '.5', 
                                                :url      => change_url }.to_json)
  - if validate
    %tr
      %td{:colspan => 2, :align => 'right'}
        = link_to(button_tag('Validate', 
                             :class  => 'btn btn-primary',
                             :alt    => labels[:title]),
                  {:action => validate_url, 
                   :button => 'validate', 
                   :type   => prefix, 
                   :id     => record_id},
                  :title                => labels[:title],
                  :remote               => true,
                  'data-miq_sparkle_on' => true)
-#                  'data-miq_sparkle_off' => true)
-# note that we do not turn off the sparkle
-# we expect async handling here

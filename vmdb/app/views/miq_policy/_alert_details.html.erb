<% if @edit %>
  <% url = url_for(:action => 'alert_field_changed',
                   :id     => "#{@alert.id || "new"}")
  %>
<% end %>
<div id="alert_details_div" style="width:100%;height:100%;overflow:auto;">
  <% if @assign %>
    <%= render(:partial => 'alert_assign') %>
  <% elsif @alert %>
    <div id="alert_info_div">
      <%= render(:partial => "layouts/flash_msg") %>
        <p class="legend">Info</p>
        <table class="style1">
          <%# Description %>
          <% if @edit %>
            <tr>
              <td class="key">Description</td>
              <td class="wider">
                <%= text_field_tag("description",
                                   @edit[:new][:description],
                                   :maxlength => MAX_DESC_LEN,
                                   "data-miq_observe" => {:interval => '.5',
                                                          :url      => url}.to_json)
                %>
                <%= javascript_tag(javascript_focus('description')) %>
              </td>
            </tr>
          <% end %>

          <%# Enabled %>
          <tr>
            <td class="key">Active</td>
            <% unless @edit %>
              <td><%= @alert.enabled ? "Yes" : "No" %></td>
            <% else %>
              <td>
                <%= check_box_tag("enabled_cb", value="1",
                                  checked=@edit[:new][:enabled],
                                  "data-miq_observe_checkbox" => {:url => url}.to_json)
                %>
              </td>
            <% end %>
          </tr>

          <%# Based on (model) %>
          <tr>
            <td class="key">Based On</td>
            <% unless @edit %>
              <td><%= h(ui_lookup(:model => @alert.db)) %></td>
            <% else %>
              <td>
                <% if @alert.memberof.empty? %>
                  <%= select_tag('miq_alert_db',
                                  options_for_select(@edit[:dbs].invert.sort,
                                                     @edit[:new][:db]),
                                  "data-miq_sparkle_on"  => true,
                                  "data-miq_sparkle_off" => true,
                                  "data-miq_observe"     => {:url => url}.to_json)
                  %>
                <% else %>
                  <%= ui_lookup(:model => @edit[:new][:db]) %>
                  &nbsp;&nbsp;&nbsp;
                  * Cannot be changed while this Alert belongs to an Alert Profile.
                <% end %>
              </td>
            <% end %>
          </tr>

          <%# Eval Method %>
          <tr>
            <td class="key">What to Evaluate</td>
            <% unless @edit %>
              <td>
                <% if @alert.expression.is_a?(MiqExpression) %><%# Expression is an MiqExpression %>
                  Expression
                <% else %>
                  <%= h(MiqAlert.expression_types(@alert.db)[@alert.expression[:eval_method]]) %>
                <% end %>
              </td>
            <% else %>
              <td>
                <% unless @edit[:expression_types].blank? %>
                  <%= select_tag('exp_name',
                                  options_for_select(@edit[:expression_types].invert.sort + [["Expression (Custom)",nil]],
                                                     @edit[:new][:expression][:eval_method].to_s),
                                  "data-miq_sparkle_on"  => true,
                                  "data-miq_sparkle_off" => true,
                                  "data-miq_observe"     => {:url => url}.to_json)
                  %>
                <% else %>
                  Expression (Custom)
                <% end %>
              </td>
            <% end %>
          </tr>

          <%# Expression driving event %>
          <% unless @edit %>
            <% if @alert.expression.is_a?(MiqExpression) || @alert.expression[:eval_method] == "nothing" %>
              <tr>
                <td class="key">Driving Event</td>
                <td><%= h(@temp[:event]) %></td>
              </tr>
            <% end %>
          <% else %>
            <% unless @edit[:new][:expression][:eval_method] && @edit[:new][:expression][:eval_method] != "nothing" %>
              <tr>
                <td class="key">Driving Event</td>
                <td>
                  <%= select_tag('exp_event',
                                  options_for_select([["<Choose>", nil],["Hourly Timer", "_hourly_timer_"]] +
                                                     @edit[:events].invert.sort, @edit[:new][:exp_event]),
                                  "data-miq_sparkle_on"  => true,
                                  "data-miq_sparkle_off" => true,
                                  "data-miq_observe"     => {:url=>url}.to_json)
                  %>
                </td>
              </tr>
            <% end %>
          <% end %>

          <%# Repeat Time %>
          <tr>
            <td class="key">Notification Frequency</td>
            <% unless @edit %>
              <td>
                <% if @alert.options[:notifications][:delay_next_evaluation].blank? %>
                  10 Minutes
                <% else %>
                  <%= h(@sb[:alert][:repeat_times][@alert.options[:notifications][:delay_next_evaluation]]) %>
                <% end %>
              </td>
            <% else %>
              <td>
                <% if @edit[:new][:expression][:eval_method] == "hourly_performance" %>
                  <%= select_tag('repeat_time',
                                  options_for_select(@sb[:alert][:hourly_repeat_times].invert.sort{|a,b|a.last<=>b.last},
                                                     @edit[:new][:repeat_time]),
                                  "data-miq_sparkle_on"  => true,
                                  "data-miq_sparkle_off" => true,
                                  "data-miq_observe"     => {:url => url}.to_json)
                  %>
                <% else %>
                  <%= select_tag('repeat_time',
                                  options_for_select(@sb[:alert][:repeat_times].invert.sort{|a,b|a.last<=>b.last},
                                                     @edit[:new][:repeat_time]),
                                  "data-miq_sparkle_on"  => true,
                                  "data-miq_sparkle_off" => true,
                                  "data-miq_observe"     => {:url => url}.to_json)
                  %>
                <% end %>
              </td>
            <% end %>
          </tr>
        </table>
        <hr>
        <%# Expression %>
        <% unless @edit %>
          <% if @alert.expression.is_a?(MiqExpression) %>

              <p class="legend">Expression</p>
              <% if @expression_table != nil %>
                <% @expression_table.each do |token| %>
                  <% if ! ["AND", "OR", "(", ")"].include?([token].flatten.first) %>
                    <%= h([token].flatten.first) %>
                  <% else %>
                    <font color="black"><b><%= h([token].flatten.first) %></b></font>
                  <% end %>
                <% end %>
              <% else %>
                An alert must contain a valid expression.
              <% end %>
              <hr>
          <% else %>
            <% unless @alert.expression[:eval_method] == "nothing" %>

                <p class="legend"><%= h(MiqAlert.expression_types(@alert.db)[@alert.expression[:eval_method]]) %> Parameters</p>
                <table class="style1">
                  <% MiqAlert.expression_options(@alert.expression[:eval_method]).each do |eo| %>
                    <%= render :partial => "alert_builtin_exp",
                               :locals  => {:option => eo}
                    %>
                  <% end %>
                </table>
                <hr>
            <% end %>
          <% end %>
        <% else %>
          <% unless @edit[:new][:expression][:eval_method] %>

              <p class="legend">Expression (Choose an element of the expression to edit)</p>
              <%= render(:partial => 'layouts/exp_editor') %>

          <% else %>
            <% unless @edit[:new][:expression][:eval_method] == "nothing" %>

                <p class="legend"><%= h(MiqAlert.expression_types(@edit[:new][:db])[@edit[:new][:expression][:eval_method]]) %> Parameters</p>
                <table class="style1">
                  <% @edit[:expression_options].each do |eo| %>
                    <%= render :partial => "alert_builtin_exp",
                               :locals  => {:option => eo}
                    %>
                  <% end %>
                </table>
            <% end %>
          <% end %>
          <hr>
        <% end %>

        <%# E-mail, SNMP, Timeline Event, Mgmt Event edit %>
        <% if @edit %>
          <%= render(:partial => "layouts/edit_email",
                     :locals  => {:action_url => "alert_field_changed",
                                  :record     => @alert})
          %>
          <%= render(:partial => "alert_snmp") %>
          <%= render(:partial => "alert_evm_event") %>
          <%= render(:partial => "alert_mgmt_event") %>

        <%# E-mail, SNMP, Timeline Event, Mgmt Event show %>
        <% else %>
          <% if @alert.options && @alert.options[:notifications] && !@alert.options[:notifications][:email].blank? %>

            <p class="legend">Send E-mail</p>
              <table class="style1">
                <tr>
                  <td class="key">From</td>
                  <td>
                    <% if @alert.options[:notifications][:email][:from].blank? %>
                      (Default: <%= h(get_vmdb_config[:smtp][:from]) %>)
                    <% else %>
                      <%= h(@alert.options[:notifications][:email][:from]) %>
                    <% end %>
                  </td>
                </tr>
                <tr>
                  <td class="key">To</td>
                  <td>
                    <% if !@temp[:email_to].blank? %>
                      <%= h(@temp[:email_to].join(';')) %>
                    <% end %>
                  </td>
                </tr>
              </table>
              <hr>
            <% end %>

            <% if @alert.options && @alert.options[:notifications] && !@alert.options[:notifications][:snmp].blank? %>

                <p class="legend">Send SNMP Trap</p>
                <table class="style1">
                  <tr>
                    <td class="key">Host</td>
                    <td>
                      <% @alert.options[:notifications][:snmp][:host].each do |host| %>
                        <%= h(host) %></br>
                      <% end %>
                    </td>
                  </tr>
                  <tr>
                    <td class="key">Version</td>
                    <td><%= h(@alert.options[:notifications][:snmp][:snmp_version]) %></td>
                  </tr>
                  <% trap_text = @alert.options[:notifications][:snmp][:snmp_version] == "v1" ||
                                  @alert.options[:notifications][:snmp][:snmp_version].nil? ? "Trap Number" : "Trap Object ID" %>
                  <tr>
                    <td class="key"><%= trap_text %></td>
                    <td><%= h(@alert.options[:notifications][:snmp][:trap_id]) %></td>
                  </tr>
                </table>
                <% if @alert.options[:notifications][:snmp].has_key?(:variables) %>
                  <br/>
                  <table class="style3">
                    <thead>
                      <tr>
                        <th>Variable Object ID</th>
                        <th>Type</th>
                        <th>Value</th>
                      </tr>
                    </thead>
                    <% @alert.options[:notifications][:snmp][:variables].each do |var| %>
                      <% if !var[:oid].blank? %>
                        <tr>
                          <td><%= h(var[:oid]) %></td>
                          <td><%= h(var[:var_type]) %></td>
                          <td><%= h(var[:value]) %></td>
                        </tr>
                      <% end %>
                    <% end %>
                  </table>
                <% end %>
                <hr>
            <% end %>
            <% if @alert.options && @alert.options[:notifications] && @alert.options[:notifications][:evm_event] %>

                <p class="legend">Timeline Event</p>
                <table class="style1">
                  <tr>
                    <td class="key">Show on Timeline</td>
                    <td>True</td>
                  </tr>
                </table>
                <hr>
            <% end %>
            <% if @alert.options && @alert.options[:notifications] && !@alert.options[:notifications][:automate].blank? %>

                <p class="legend">Send Management Event</p>
                <table class="style1">
                  <tr>
                    <td class="key">Event Name</td>
                    <td><%= h(@alert.options[:notifications][:automate][:event_name]) %></td>
                  </tr>
                </table>
                <hr>
            <% end %>
          <% end %>

          <%# Alert Profiles alert is assigned to %>
          <% unless @edit %>
            <% if x_active_tree == :alert_tree %>
              <tr>
                <td>
                  <p class="legend">Belongs to Alert Profiles</p>
                  <% if @alert_profiles.empty? %>
                    <%= render :partial => 'layouts/info_msg', :locals => {:message => "This Alert is not assigned to any Alert Profiles."}%>
                  <% else %>
                    <table class="style3">
                      <thead>
                        <tr>
                          <th class="icon"></th>
                          <th></th>
                        </tr>
                      </thead>
                      <tbody>
                        <% @alert_profiles.each do |ap| %>
                          <% id = "xx-#{@alert.db}_ap-#{to_cid(ap.id)}" %>
                          <tr class="<%= cycle('row0', 'row1') %>"
                              onclick="<%= remote_function(:url=>"/miq_policy/x_show/#{id}?accord=alert_profile") %>"
                              onmouseover="this.style.cursor='pointer'" title="View this Alert Profile">
                            <td>
                                <img src="/images/icons/new/miq_alert_profile.png" valign="middle" border="0" height="20" width="20" />
                            </td>
                            <td>
                              <%= ap.description %>
                            </td>
                          </tr>
                        <% end %>
                      </tbody>
                    </table>
                  <% end %>

              </td></tr>
            <% end %>
          <% end %>

          <%# Show any owning actions %>
          <% unless @edit %>
            <% if x_active_tree == :alert_tree && !@alert.owning_miq_actions.empty? %>
              <tr>
                <td>
                  <p class="legend">Referenced by Actions</p>
                  <% if @alert.owning_miq_actions.empty? %>
                    <%= render :partial => 'layouts/info_msg', :locals => {:message => "This Alert is not referenced by any Actions."}%>
                  <% else %>
                    <table class="style3">
                      <thead>
                        <tr>
                          <th class="icon"></th>
                          <th></th>
                        </tr>
                      </thead>
                      <tbody>
                        <% @alert.owning_miq_actions.each do |oa| %>
                          <% id = "a-#{to_cid(oa.id)}" %>
                          <tr class="<%= cycle('row0', 'row1') %>"
                              onclick="<%= remote_function(:url=>"/miq_policy/x_show/#{id}?accord=action") %>"
                              onmouseover="this.style.cursor='pointer'" title="View this Action">
                            <td>
                              <% if oa.action_type == "default" %>
                                <img src="/images/icons/new/miq_action.png" />
                              <% else %>
                                <img src="/images/icons/new/miq_action_<%= oa.action_type %>.png" />
                              <% end %>
                            </td>
                            <td>
                              <%= oa.description %>
                            </td>
                          </tr>
                        <% end %>
                      </tbody>
                    </table>
                  <% end %>
                  <hr>
                </td>
              </tr>
            <% end %>
          <% end %>
        </div>
      <% end %>
</div>
<% if @edit %>
  <%# Need this to bind checkbox observers when under DHTMLX tabs %>
  <%# TODO: Remove when DHTMLX tabs are converted to jQuery tabs  %>
  <script>miqObserveCheckboxes();</script>
<% end %>

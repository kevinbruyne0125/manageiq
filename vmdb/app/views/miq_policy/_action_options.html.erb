<% url = url_for(:action => 'action_field_changed', :id => "#{@action.id || "new"}") %>

<div id="action_options_div">
  <% if @edit[:new][:action_type] == "email" %>
    <p class="legend">E-mail Settings</p>
    <table class="style1">
      <tr>
        <td class="key">From E-mail Address<br/>(leave blank for default)</td>
        <td>
          <%= text_field_tag("from",
                             @edit[:new][:options][:from],
                             :maxlength => MAX_DESC_LEN,
                             "data-miq_observe" => {:interval => '.5', 
                                                    :url      => url}.to_json) 
          %>
          (Default: <%= h(get_vmdb_config[:smtp][:from]) %>)
        </td>
      </tr>
      <tr>
        <td class="key">To E-mail Address</td>
        <td>
          <%= text_field_tag("to",
                             @edit[:new][:options][:to],
                             :maxlength => MAX_DESC_LEN,
                             "data-miq_observe" => {:interval => '.5', 
                                                    :url      => url}.to_json) 
          %>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "set_custom_attribute" %>
  
    <p class="legend">Custom Attribute Settings</p>
    <table class="style1">
      <tr>
        <td class="key">Attribute Name</td>
        <td>
          <%= text_field_tag("attribute",
                              @edit[:new][:options][:attribute],
                              :maxlength => MAX_DESC_LEN,
                              "data-miq_observe" => {:interval => '.5', 
                                                     :url      => url}.to_json)
          %>
        </td>
      </tr>
      <tr>
        <td class="key">Value to Set</td>
        <td>
          <%= text_field_tag("value",
                             @edit[:new][:options][:value],
                             :maxlength => MAX_DESC_LEN,
                             "data-miq_observe" => {:interval => '.5', 
                                                    :url      => url}.to_json) 
          %>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "tag" %>

    <p class="legend">Applied Tag</p>
    <table class="style1">
      <tr>
        <td class="key">Tag to Apply:</td>
        <td>
          <span id="tag_selected">
            <%= h(@tag_selected) %>
          </span>
        </td>
      </tr>
    </table>
    <hr>
    <p class="legend">Select a Tag to Apply</p>
    <table class="style1">
      <tr>
        <td>
          <div id="action_tags_treebox"></div>
          <%= render(:partial => "layouts/dynatree",
                     :locals  => {:tree_id => "action_tags_treebox",
                                  :tree_name                   => "action_tags_tree",
                                  :json_tree                   => @temp[:cat_tree],
                                  :click_url                   => "/miq_policy/action_tag_pressed/",
                                  :onclick                     => "cfmeOnClick_TagCat",
                                  :enable_tree_images          => false,
                                  :exp_tree                    => false,
                                  :cfme_changes_check          => true,
                                  :open_close_all_on_dbl_click => true
                                 }) %>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "create_snapshot" %>

    <p class="legend">Snapshot Settings</p>
    <table class="style1">
      <tr>
        <td class="key">Snapshot Name</td>
        <td>
          <%= text_field_tag("snapshot_name",
                             @edit[:new][:options][:name],
                             :maxlength => MAX_DESC_LEN,
                             "data-miq_observe" => {:interval=>'.5', 
                                                    :url => url}.to_json) 
          %>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "delete_snapshots_by_age" %>

    <p class="legend">Snapshot Age Settings</p>
    <table class="style1">
      <tr>
        <td class="key">Delete if Older than</td>
        <td>
          <%= select_tag('snapshot_age',
                          options_for_select([["<Choose>", nil]] + SNAPSHOT_AGES.invert.to_a.sort{|a,b| a.last<=>b.last},
                          @edit[:new][:options][:age]),
                          "data-miq_observe" => {:url => url}.to_json) %>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "reconfigure_memory" %>

    <p class="legend">Reconfigure Memory</p>
    <table class="style1">
      <tr>
        <td class="key">Memory Size</td>
        <td>
          <%= text_field_tag("memory_value",
                              @edit[:new][:options][:value],
                              :maxlength => MAX_DESC_LEN,
                              "data-miq_observe" => {:interval => '.5', 
                                                     :url      => url}.to_json) 
          %>
           (Enter the value between 4 - 65636 MB)
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "reconfigure_cpus" %>

    <p class="legend">Reconfigure CPU</p>
    <table class="style1">
      <tr>
        <td class="key">Number of CPU's</td>
        <td>
          <% cpu_val = ["1","2","4"] %>
          <%= select_tag('cpu_value',
                         options_for_select(cpu_val,
                         @edit[:new][:options][:value]),
                         :style => "width:50px",
                         "data-miq_observe" => {:url => url}.to_json) 
          %>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "custom_automation" %>

    <p class="legend">Custom Automation</p>
    <table class="style1">
      <tr><td>
        <%= render(:partial => "layouts/ae_resolve_options",
                   :locals  => {:resolve           => @edit,
                                :form_action       => "miq_action",
                                :field_changed_url => "action_field_changed"
                               })
        %>
      </td></tr>
    </table>

  <% elsif @edit[:new][:action_type] == "evaluate_alerts" %>

    <p class="legend">Select Alerts to be Evaluated</p>
    <table class="style1">
      <tbody>
        <tr>
          <td >
            <table width="100%" class="form" id="formtest">
              <tr>
                <td align="left">Available Alerts:</td>
                <td></td>
                <td align="left" class="widthed"> Selected Alerts:</td>
              </tr>
              <tr>
                <td align="left" class="widthed" valign="top">
                  <span id="choices_chosen_div">
                    <%= select_tag('choices_chosen[]',
                                    options_for_select( @edit[:choices].sort ),
                                   {:multiple => true,
                                    :class    => "widthed", 
                                    :size     => 8, 
                                    :id       => "choices_chosen"})
                    %>
                  </span>
                  <p>
                </td>
                <td width="20" valign="middle">
                  <%= link_to(image_tag("/images/toolbars/right.png",
                                        :class => "rollover small", :alt => "Move selected Alerts into this Action"),
                              {:action => 'action_edit', 
                               :button => 'move_right',
                               :id     => "#{@action.id || "new"}"},
                              "data-miq_sparkle_on"  => true,
                              "data-miq_sparkle_off" => true,
                              "data-submit"          => 'choices_chosen_div',
                              :remote => true,
                              :title  => "Move selected Alerts into this Action") 
                  %>

                  <%= link_to(image_tag("/images/toolbars/left.png",
                                        :class => "rollover small", 
                                        :alt=>"Remove selected Alerts from this Action"),
                              {:action => 'action_edit',
                               :button => 'move_left',
                               :id     => "#{@action.id || "new"}"},
                              "data-miq_sparkle_on"  => true,
                              "data-miq_sparkle_off" => true,
                              "data-submit"          => 'members_chosen_div',
                              :remote => true,
                              :title  => "Remove selected Alerts from this Action")
                  %>

                </td>
                <td align="right" valign="top" >
                  <span id="members_chosen_div">
                    <%= select_tag('members_chosen[]',
                                    options_for_select( @edit[:new][:alerts].sort),
                                   {:multiple => true,
                                    :class    => "widthed",
                                    :size     => 8,
                                    :id       => "members_chosen" })
                    %>
                  </span>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </tbody>
    </table>

  <% elsif @edit[:new][:action_type] == "snmp_trap" %>

    <p class="legend">SNMP Trap Settings</p>
    <table class="style1">
      <tr>
        <td class="key">Host</td>
        <td>
          <%= text_field_tag("host",
                              @edit[:new][:options][:host],
                              :maxlength => MAX_DESC_LEN,
                              "data-miq_observe" => {:interval => '.5', 
                                                     :url      => url}.to_json) 
          %>
        </td>
      </tr>
      <tr>
        <td class="key">Version</td>
        <td>
          <% version = ["v1","v2"] %>
          <%= select_tag('snmp_version',
                          options_for_select(version,
                          @edit[:new][:options][:snmp_version]),
                          :style => "width:50px",
                          "data-miq_sparkle_on"  => true,
                          "data-miq_sparkle_off" => true,
                          "data-miq_observe"     => {:url => url}.to_json) 
          %>
        </td>
      </tr>
      <% trap_text = @edit[:new][:options][:snmp_version] == "v1" || @edit[:new][:options][:snmp_version].nil? ? "Trap Number" : "Trap Object ID" %>
      <tr>
        <td class="key"><%= trap_text %></td>
        <td>
          <%= text_field_tag("trap_id",
                              @edit[:new][:options][:trap_id],
                              :maxlength => MAX_DESC_LEN,
                              "data-miq_observe" => {:interval => '.5', 
                                                     :url      => url}.to_json) 
          %>
        </td>
      </tr>
    </table>
    <p class="legend">Variables</p>
    <table class="style1">
      <thead>
        <tr>
          <th>Object ID</th>
          <th>Type</th>
          <th>Value</th>
        </tr>
      </thead>
      <% 10.times do |i| %>
        <% f = "oid__" + (i+1).to_s %>
        <% t = "var_type__" + (i+1).to_s %>
        <% v = "value__" + (i+1).to_s %>
        <tr>
          <td class="wide">
            <%= text_field_tag("#{f}",
                                @edit[:new][:options][:variables][i][:oid],
                                :maxlength => MAX_NAME_LEN,
                                "data-miq_observe" => {:interval => '.5', 
                                                       :url      => url}.to_json) 
            %>
          </td>
          <td class="wide">
            <%= select_tag("#{t}",
                            options_for_select(["<None>"] + @edit[:snmp_var_types].sort,
                            @edit[:new][:options][:variables][i][:var_type]),
                            :style => "width:100px",
                            "data-miq_observe" => {:url => url}.to_json)
            %>
          </td>
          <% if @edit[:new][:options][:variables][i][:var_type] == "Null" || @edit[:new][:options][:variables][i][:var_type] == "<None>" %>
            <%  val_disabled = true %>
          <% else %>
            <%  val_disabled = false %>
          <% end %>
          <td class="wide">
            <%= text_field_tag("#{v}",
                                @edit[:new][:options][:variables][i][:value],
                                :maxlength => MAX_NAME_LEN,
                                :disabled  => val_disabled,
                                "data-miq_observe" => {:interval => '.5', 
                                                       :url      => url}.to_json) 
            %>
          </td>
        </tr>
      <% end %>
    </table>

  <% elsif @edit[:new][:action_type] == "assign_scan_profile" %>

    <p class="legend">Analysis Profiles</p>
    <table class="style1">
      <tr>
        <td class="key">Analysis Profiles</td>
        <td>
          <%= select_tag('analysis_profile',
                          options_for_select([["<Choose>",nil]] + @edit[:new][:scan_profiles],
                          @edit[:new][:options][:scan_item_set_name]),
                          :style => "width:150px",
                          "data-miq_observe" => {:url=>url}.to_json) 
          %>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "inherit_parent_tags" %>

    <p class="legend">Inherit Tags Settings</p>
    <table class="style1">
      <tr>
        <td class="key">Parent Type</td>
        <td>
          <%= select_tag('parent_type',
                          options_for_select(@edit[:tag_parent_types],
                          @edit[:new][:options][:parent_type]),
                          "data-miq_observe" => {:url => url}.to_json) 
          %>
        </td>
      </tr>
      <tr>
        <td class="key">Categories</td>
        <td>
            <table>
              <% j = 0 %>
              <% @edit[:cats].each do |cat| %>
                <% if j == 0 || j > 2 %>
                  <% j = 0 %>
                  <tr>
                <% end %>
                  <% checked = !@edit[:new][:options][:cats].nil? && @edit[:new][:options][:cats].include?(cat.first) %>
                  <td align="left" valign="top" nowrap>
                    <%= check_box_tag("cat_#{cat.first}", value="1",
                                      checked=checked,
                                      "data-miq_observe_checkbox" => {:url => url}.to_json)
                    %>
                    <%= h(cat.last) %>
                  </td>
                  <% j += 1 %>
                <% if j > 2 %>
                  </tr>
                <% end %>
              <% end %>
            </table>
        </td>
      </tr>
    </table>

  <% elsif @edit[:new][:action_type] == "remove_tags" %>

    <p class="legend">Remove Tags Settings</p>
    <table class="style1">
      <tr>
        <td class="key">Categories</td>
        <td>
            <table>
              <% j = 0 %>
              <% @edit[:cats].each do |cat| %>
                <% if j == 0 || j > 2 %>
                  <% j = 0 %>
                  <tr>
                <% end %>
                  <% checked = !@edit[:new][:options][:cats].nil? && @edit[:new][:options][:cats].include?(cat.first) %>
                  <td align="left" valign="top" nowrap>
                    <%= check_box_tag("cat_#{cat.first}", value="1",
                                      checked=checked,
                                      "data-miq_observe_checkbox" => {:url => url}.to_json)
                    %>
                    <%= h(cat.last) %>
                  </td>
                  <% j += 1 %>
                <% if j > 2 %>
                  </tr>
                <% end %>
              <% end %>
            </table>
        </td>
      </tr>
    </table>

  <% end %>
  <br/>
</div>
<%# Need this to bind checkbox observers when under DHTMLX tabs %>
<%# TODO: Remove when DHTMLX tabs are converted to jQuery tabs  %>
<script>miqObserveCheckboxes();</script>

<% if is_browser_ie? %>
	<html>
	<head>
	<title>VM <%= @record.name %> Remote Console</title>
	<script>
		function connect()
		{
			mks.Connect("<%= @mks["host"] %>", 902, "<%= @mks["cfgFile"] %>", "<%= @mks["ticket"] %>", "<%= @mks["ticket"] %>");
		}

		function shut() { mks.disconnect(); }
	</script>
	</head>
	<body onload="connect();" onunload="shut();" bgcolor="#000000">
	<center>
	<script id=win for="mks" event="OnWindowStateChange(windowState)">
		if (windowState == 3) {
			if (confirm("You are about to enter fullscreen mode." +
									" Press Ctl+Alt to return to windowed mode.")) {
				mks.setFullScreen(true);
			}
		}
	</script>
	<script id=grab for="mks" event="OnGrabStateChange(grabState)">
		if (grabState == 1) {
			window.status = "Press Ctl+Alt to release cursor.";
		} else {
			window.status = "";
		}
	</script>
	<script id=size for="mks" event="OnMessage(type, message)">
		alert(message);
	</script>
	<script id=conn for="mks" event="OnConnectionStateChange(cntd)">
	</script>
	<script id=conn for="mks" event="OnDeviceConnectionStateChange(cntd, x, y)">
	</script>
	<script id=size for="mks" event="OnSizeChange()">
		mks.height = mks.VMScreenHeight + 1;
		mks.width = mks.VMScreenWidth + 1;
	</script>
	<object width="100%" height="100%" id="mks" classid="CLSID:<%= get_vmdb_config[:server][:mks_classid] %>">
<!--
	<object width="100%" height="100%" id="mks" classid="CLSID:DC7D77DA-E1AC-4D40-930B-B87B2954E034">
	<object width="100%" height="100%" id="mks" classid="CLSID:DC7D77DA-E1AC-4D40-930B-B87B2954E034" codebase="vmware-mks.cab#version=2,0,1,0">
	<object width="100%" height="100%" id="mks" classid="CLSID:DC7D77DA-E1AC-4D40-930B-B87B2954E034" codebase="/plugins/mks/msie/vmware-mks.cab#version=2,0,1,0">
-->
	</object>
	</center>
	</body>
	</html>
<% elsif is_browser?("firefox") %>
	<html>
	<head>
	<title>VM <%= @record.name %> Remote Console</title>
	<!--
	<script src="qsp.js"></script>
	-->
	<script>
		const IMessageListener = Components.interfaces.xpcomIMessageListener;
		const IGrabStateListener = Components.interfaces.xpcomIGrabStateListener;
		const IWindowStateListener = Components.interfaces.xpcomIWindowStateListener;
		const ISizeChangeListener = Components.interfaces.xpcomISizeChangeListener;
		const IConnectionStateListener = Components.interfaces.xpcomIConnectionStateListener;

		var mks = null;
		//var qsp = new Querystring();
		function connect()
		{
			// Check if the plugin is loaded.
			if (!navigator.mimeTypes["application/x-vmware-mks;version=<%= @mks_version %>"]) {
				document.getElementById("install").style.display = '';
				return;
			}

			document.getElementById("install").style.display = 'none';
			mks = document.getElementById("mks");

			mks.messageListener = new MessageListener();
			mks.grabStateListener = new GrabStateListener();
			mks.windowStateListener = new WindowStateListener();
			mks.sizeChangeListener = new SizeChangeListener();
			mks.connectionStateListener = new ConnectionStateListener();

			//  var host = qsp.get("<%#= @mks["@host"] %>");
			//  var path = qsp.get("<%#= @mks["@cfgFile"] %>");
			//  var name = qsp.get("<%#= @mks["@ticket1"] %>");
			//  var pass = qsp.get("<%#= @mks["@ticket2"] %>");
			//   mks.connect(host, 902, path, name, pass);

			//   mks.connect("<%#= @mks["host"] %>", 902, "<%#= @mks["cfgFile"] %>", "<%#= @mks["ticket1"] %>", "<%#= @mks["ticket2"] %>");

			mks.connect("<%= @mks["host"] %>", 902, "<%= @mks["cfgFile"] %>", "<%= @mks["ticket"] %>", "<%= @mks["ticket"] %>");
		}

		function shut() {
			if (mks != null) {
				mks.disconnect();
			}
		}

		function MessageListener() {}
		MessageListener.prototype =
		{
			onMessage : function (msgType, message) {
				if (msgType == IMessageListener.MT_INFO) {
					window.status = message;
				} else {
					alert("Connection failed.");
				}
			}
		};

		function GrabStateListener() {}
		GrabStateListener.prototype =
		{
			onGrabStateChange : function (grabState) {
				if (grabState == IGrabStateListener.GS_GRABBED) {
					window.status = 'Press Ctrl+Alt to release cursor.';
				} else {
					window.status = "";
				}
			}
		};

		function WindowStateListener() {}
		WindowStateListener.prototype =
		{
			onWindowStateChange : function (windowState) {
				if (windowState == IWindowStateListener.WS_ENTER_FULLSCREEN) {
					mks.setFullScreen(true);
				}
			}
		};

		function SizeChangeListener() {}
		SizeChangeListener.prototype = {
			onSizeChange : function () {
				mks.width = mks.vmScreenWidth + 1;
				mks.height = mks.vmScreenHeight + 1;
			}
		};

		function ConnectionStateListener() {}
		ConnectionStateListener.prototype = {
			 onConnectionStateChange : function (isConnected) {
			 },
			 onDeviceConnectionStateChange : function(isConnected, x, y) {
			 }
		};

		function install() {
			var os = window.navigator.platform;
			if (os.match(/Win32/)) {
				window.frames["pluginDownload"].location.href = '/plugins/mks/mozilla/win32/vmware-mks.xpi';
			} else if (os.match(/Linux/)) {
				window.frames["pluginDownload"].location.href = '/plugins/mks/mozilla/linux/vmware-mks.xpi';
			}
		}
	</script>
	</head>

	<%# Following line replaced since FF doesn't run the onunload until AFTER the page is unloaded %>
	<!--body onload="connect();" onunload="shut();"  style="background-color:black; color:yellow; font-size:17pt; font-weight:bold;"-->
	<%# Using onbeforeunload event instead of onunload %>
	<body onload="connect();" onbeforeunload="shut();" style="background-color:black; color:yellow; font-size:17pt; font-weight:bold;">

	<object id="mks" type="application/x-vmware-mks;version=<%= @mks_version %>" width="100%" height="100%"></object>
	<div id="install" style="display:none">
<!--
	 This page requires the VMware MKS plugin. Click <a href="javascript:install();">here</a> to install.
	 If asked to save, then save the xpi and open it in Firefox. Please reload the page after installation.
-->
	 This page requires the VMware MKS plugin. Install the plugin and try again.
	</div>
	<iframe id="pluginDownload" name="pluginDownload" style="display:none"></iframe>
	</body>
	</html>
<% end %>

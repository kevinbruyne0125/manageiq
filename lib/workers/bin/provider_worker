#!/usr/bin/env ruby

require File.expand_path("../../../config/environment", __dir__)

ems_id = ENV["EMS_ID"]

ems      = ExtManagementSystem.find(ems_id)
all_emss = [ems] + ems.child_managers

provider_opts = {
  :ems => all_emss.map do |e|
    e.attributes.merge(
      "endpoints"       => e.endpoints,
      "authentications" => e.authentications
    )
  end
}

# Send the connection information to the child process via STDIN by creating a
# pipe, writing the config to our end of the pipe, and replacing STDIN with the
# read end of the pipe.  This allows the child to simply read from STDIN to get
# the credentials and other config in a secure way.
stdin_rd, stdin_wr = IO.pipe
stdin_wr.write(provider_opts.to_json)
stdin_wr.close

$stdin.reopen(stdin_rd)

Kernel.exec(ARGV.shelljoin)

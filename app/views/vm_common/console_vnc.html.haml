= render :partial => 'layouts/doctype'
%html{:lang => I18n.locale.to_s.sub('-', '_')}
  %head
    %title
      = _('VNC Console')
    = favicon_link_tag
    = stylesheet_link_tag 'application'
    = javascript_include_tag 'jquery', 'novnc-rails'

  %body{:style => 'margin: 0px; padding-top: 0px !important;'}
    = link_to('Ctrl-Alt-Del', '#', :id => 'sendCtrlAltDelButton', :class => 'btn btn-default')
    #vnc
      #noVNC_status_bar.console-status
        #noVNC_status.label
          = _('Loading ...')

    %canvas#noVNC_canvas.console-screen
      = _('Canvas not supported.')

    :javascript
      (function(){
        "use strict";
        var rfb;

        window.WEB_SOCKET_SWF_LOCATION = '#{asset_path('noVNC/web-socket-js/WebSocketMain.swf')}';

        function sendCtrlAltDel() {
          rfb.sendCtrlAltDel();
          return false;
        }

        function updateState(rfb, state, oldstate, msg) {
          var level;
          var s = $D('noVNC_status');
          var sb = $D('noVNC_status');
          var cad = $D('sendCtrlAltDelButton');
          switch (state) {
            case 'failed': level = "danger"; break;
            case 'fatal': level = "danger"; break;
            case 'normal': level = "success"; break;
            case 'disconnected': level = "default"; break;
            case 'loaded': level = "success"; break;
            default: level = "warning"; break;
          }

          cad.disabled = state !== "normal";

          if (typeof (msg) !== 'undefined') {
            sb.setAttribute("class", "label label-" + level);
            s.innerHTML = msg;
          }
        }

        $(function () {
          $D('sendCtrlAltDelButton').style.display = "inline"; // FIXME
          $D('sendCtrlAltDelButton').onclick = sendCtrlAltDel;

          var host = window.location.hostname;
          var encrypt = window.location.protocol == 'https:';
          var port = encrypt ? 443 : 80;
          if (window.location.port) port = window.location.port;

          var secret = "#{j(@secret)}";
          var url = "#{j(@url)}";

          rfb = new RFB({
            target: $D('noVNC_canvas'),
            encrypt: encrypt,
            true_color: true,
            local_cursor: true,
            shared: true,
            view_only: false,
            onUpdateState: updateState});
          rfb.connect(host, port, secret, url);
        });
      })();

- ng_show                ||= true
- validate_url           ||= 'log_depot_edit'
- prefix                 ||= 'log'
- userid_label           ||= _("Username")
- password_label         ||= _("Password")
- new_password_label     ||= _("New ") + password_label
- verify_label           ||= _("Verify Password")
- ng_reqd_userid         ||= false
- ng_reqd_password       ||= false
- ng_reqd_verify         ||= "#{ng_model}.#{prefix}_password != ''"
- passwd_mismatch        ||= _("Passwords do not match")
- change_stored_password ||= _("Change stored password")
- cancel_password_change ||= _("Cancel password change")
- verify_title_off       ||= _("Server information, Username and matching password fields are needed to perform verification of credentials")

%div{"ng-controller" => "credentialsController"}
  %div{"ng-show" => "#{ng_show}"}
    .form-group{"ng-class" => "{'has-error': angularForm.#{prefix}_userid.$error.required || angularForm.#{prefix}_userid.$error.requiredIfExisted}"}
      %label.col-md-2.control-label{"for" => "textInput-markup"}
        = userid_label
      .col-md-4
        %input.form-control{"type"        => "text",
                            "id"          => "textInput-markup",
                            "ng-required" => "#{ng_reqd_userid}",
                            "required-if-existed" => "",
                            "name"        => "#{prefix}_userid",
                            "ng-model"    => "#{ng_model}.#{prefix}_userid",
                            "checkchange" => "",
                            :class        => "form-control"}
        %span.help-block{"ng-show" => "angularForm.#{prefix}_userid.$error.required || angularForm.#{prefix}_userid.$error.requiredIfExisted"}
          = _("Required")

  %div{"ng-show" => "#{ng_show}"}
    .form-group{"ng-class" => "{'has-error': angularForm.#{prefix}_password.$error.required}"}
      %label.col-md-2.control-label{"for" => "textInput-markup"}
        %div{"ng-show" => "bChangeStoredPassword != true"}
          = password_label
        %div{"ng-show" => "bChangeStoredPassword"}
          = new_password_label
      .col-md-4
        %input.form-control{"type"         => "password",
                            "id"           => "textInput-markup",
                            "ng-required"  => "#{ng_reqd_password}",
                            "ng-disabled"  => "!showVerify(#{ng_model}.#{prefix}_userid)",
                            "name"         => "#{prefix}_password",
                            "ng-model"     => "#{ng_model}.#{prefix}_password",
                            "prefix"       => "#{prefix}",
                            "verifypasswd" => "",
                            "checkchange"  => "",
                            :class         => "form-control"}
        %span.help-block{"ng-show" => "angularForm.#{prefix}_password.$error.required"}
          = _("Required")
      %div{"ng-if" => "showChangePasswordLinks(#{ng_model}.#{prefix}_userid)"}
        %a{:href => "", "ng-hide" => "bChangeStoredPassword", "ng-click" => "changeStoredPassword()"}
          = change_stored_password
        %a{:href => "", "ng-show" => "bChangeStoredPassword", "ng-click" => "cancelPasswordChange()"}
          = cancel_password_change
    %div{"ng-show" => "!showVerify(#{ng_model}.#{prefix}_userid)"}
      .form-group
        %label.col-md-2
        .col-md-4
          = render :partial => "layouts/angular/form_buttons_verify_angular",
                                       :locals  => {:ng_show          => "#{ng_show}",
                                                    :validate_url     => validate_url,
                                                    :id               => id,
                                                    :valtype          => "#{prefix}",
                                                    :verify_title_off => verify_title_off,
                                                    :basic_info_needed => defined?(basic_info_needed) ? basic_info_needed : nil}

    %div{"ng-show" => "#{ng_show}"}
    .form-group{"ng-class" => "{'has-error': angularForm.#{prefix}_verify.$error.required || (#{prefix}_VerifyCtrl != undefined && #{prefix}_VerifyCtrl.$error.verifypasswd)}"}
      %label.col-md-2.control-label{"ng-show" => "showVerify(#{ng_model}.#{prefix}_userid)", "for" => "textInput-markup"}
        = verify_label
      .col-md-4
        %input.form-control{"type"         => "password",
                            "id"           => "textInput-markup",
                            "ng-required"  => "#{ng_reqd_verify}",
                            "ng-disabled"  => "!showVerify(#{ng_model}.#{prefix}_userid)",
                            "name"         => "#{prefix}_verify",
                            "ng-model"     => "#{ng_model}.#{prefix}_verify",
                            "ng-show"      => "showVerify(#{ng_model}.#{prefix}_userid)",
                            "prefix"       => "#{prefix}",
                            "verifypasswd" => "",
                            "checkchange"  => "",
                            :class         => "form-control"}
        %div{"ng-show" => "showVerify(#{ng_model}.#{prefix}_userid)"}
          %span.help-block{"ng-show" => "angularForm.#{prefix}_verify.$error.required"}
            = _("Required")
          %span.help-block{"ng-show" => "!angularForm.#{prefix}_verify.$error.required && #{prefix}_VerifyCtrl != undefined && #{prefix}_VerifyCtrl.$error.verifypasswd"}
            = passwd_mismatch
    %div{"ng-show" => "showVerify(#{ng_model}.#{prefix}_userid)"}
      .form-group
        %label.col-md-2
        .col-md-4
          = render :partial => "layouts/angular/form_buttons_verify_angular",
                                       :locals  => {:ng_show          => "#{ng_show}",
                                                    :validate_url     => validate_url,
                                                    :id               => id,
                                                    :valtype          => "#{prefix}",
                                                    :verify_title_off => verify_title_off,
                                                    :basic_info_needed => defined?(basic_info_needed) ? basic_info_needed : nil}

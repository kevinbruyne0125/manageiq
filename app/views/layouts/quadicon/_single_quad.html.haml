- if @listicon.nil?
  - if item.kind_of?(MiqCimInstance)
    - if item.kind_of?(CimStorageExtent)
      - img_path = image_path("100/cim_base_storage_extent.png")
    - else
      - img_path = image_path("100/#{item.class.to_s.underscore}.png")
  - elsif item.decorator_class?
    - img_path = image_path(item.decorate.try(:fonticon) || item.decorate.try(:listicon_image))
  - else
    - img_path = image_path("100/#{item.class.base_class.to_s.underscore}.png")
  .flobj
    %img{:src => image_path("#{size}/base-single.png"), :width => size, :height => size, :border => 0}
  .flobj{:class => "e#{size}"}
    %img{:src => img_path, :border => 0}

  - unless typ == :listnav
    -# Listnav, no clear image needed
    .flobj
      - name = item.kind_of?(MiqCimInstance) ? item.evm_display_name : item.name
      - if !@embedded || @showlinks
        - if @explorer
          = link_to(image_tag(image_path("#{size}/reflection.png"), :width => size, :height => size, :title => h(name)),
            {:action => 'x_show', :id => controller.send(:list_row_id, item)},
            "data-miq_sparkle_on"  => true,
            "data-miq_sparkle_off" => true,
            "data-method"          => :post,
            :remote                => true)
        - else
          %a{:href => url_for_record(item), :title => h(name)}
            %img{:src => image_path("clearpix.gif"), :width => size, :height => size}
      - else
        %a{:title => h(name)}
          %img{:src => image_path("clearpix.gif"), :width => size, :height => size}
- else
  - width = size == 150 ? 54 : 35
  .flobj
    %img{:src => image_path("#{size}/base-single.png"), :border => 0, :width => size, :height => size}
  .flobj{:class => "e#{size}"}
    %img{:src => image_path("100/#{@listicon}.png"), :width => width * 1.8, :border => 0}

  - unless typ == :listnav
    -# Listnav, no clear image needed
    .flobj
      - if !@embedded || @showlinks
        - case @listicon
        - when "scan_history"
          - name = item.started_on
        - when "orchestration_stack_output", "output"
          - name = item.key
        - else
          - name = item.name
        - l = url_for(:controller => @parent.class.base_class.to_s.underscore, :action => @lastaction, :id => @parent.id, :show => item.id)
        %a{:href => l, :title => h(name)}
          %img{:src => image_path("#{size}/reflection.png"), :width => size, :height => size}
      - else
        %a{:title => h(item.name)}
          %img{:src => image_path("#{size}/reflection.png"), :width => size, :height => size}

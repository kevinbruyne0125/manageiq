- validate_url ||= (record.id || @hostitems) ? "update" : "create"
- legendtext ||= "Credentials"

%h3
  = legendtext
#auth_tabs
  %ul.nav.nav-tabs
    = miq_tab_header('default', 'default') do
      = _("Default")
    - if %w(ems_cloud ems_infra).include?(params[:controller])
      - if @edit[:new][:emstype] == "rhevm"
        = miq_tab_header('metrics', 'default') do
          = _("C & U Database")
      - if %w(openstack openstack_infra).include?(@edit[:new][:emstype])
        = miq_tab_header('amqp', 'default') do
          = _("AMQP")
      - if %w(openstack_infra).include?(@edit[:new][:emstype])
        = miq_tab_header('ssh_keypair', 'default') do
          = _("RSA key pair")
    - else
      = miq_tab_header('remote', 'default') do
        = _("Remote Login")
      = miq_tab_header('ws', 'default') do
        = _("Web Services")
      = miq_tab_header('ipmi', 'default') do
        = _("IPMI")

  .tab-content
    = miq_tab_content('default', 'default') do
      %table.style1
        %tbody
          = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :validate_url      => validate_url,
                                              :uid_label         => @emstype == "ec2" ? "Access Key ID" : nil,
                                              :pwd_label         => @emstype == "ec2" ? "Secret Access Key" : nil,
                                              :id                => nil,
                                              :prefix            => "default",
                                              :basic_info_needed => true}
      %span{:style => "color:black"}= _("Required. Should have privileged access, such as root or administrator.")

    - if %w(ems_cloud ems_infra).include?(params[:controller])
      = miq_tab_content('metrics', 'default') do
        %table.style1
          %tbody
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :validate_url      => validate_url,
                                              :id                => nil,
                                              :prefix            => "metrics",
                                              :basic_info_needed => true}
          %span{:style => "color:black"}
            Used to gather Capacity & Utilization metrics.
      = miq_tab_content('amqp', 'default') do
        %table.style1
          %tbody
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :validate_url      => validate_url,
                                              :id                => nil,
                                              :prefix            => "amqp",
                                              :basic_info_needed => true}
        %span{:style => "color:black"}
          Used to authenticate with OpenStack AMQP Messaging Bus for event handling.
      = miq_tab_content('ssh_keypair', 'default') do
        %table.style1
          %tbody
            = render :partial => "/layouts/auth_credentials_keypair",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :validate_url      => validate_url,
                                              :id                => nil,
                                              :prefix            => "ssh_keypair",
                                              :basic_info_needed => true}
        %span{:style => "color:black"}= _("Used for SSH connection to all %s in this provider.") % title_for_hosts
    - else
      = miq_tab_content('remote', 'default') do
        %table.style1
          %tbody
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :validate_url      => validate_url,
                                              :id                => nil,
                                              :prefix            => "remote",
                                              :basic_info_needed => true}
        %span{:style => "color:black"}
          Required if SSH login is disabled for the Default account.
      = miq_tab_content('ws', 'default') do
        %table.style1
          %tbody
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :validate_url      => validate_url,
                                              :id                => nil,
                                              :prefix            => "ws",
                                              :basic_info_needed => true}
        %span{:style => "color:black"}
          Used for access to Web Services.
      = miq_tab_content('ipmi', 'default') do
        %table.style1
          %tbody
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "hostModel",
                                              :validate_url      => validate_url,
                                              :id                => nil,
                                              :prefix            => "ipmi",
                                              :basic_info_needed => true}
        %span{:style => "color:black"}
          Used for access to IPMI.
- if !session[:host_items].nil?
  %table{:class => "admintable"}
    %tbody
      %tr
        %td{:class => "key"}Select Host to validate against
        %td
          = select_tag('validate_id',
                       options_for_select(@selected_hosts.invert.sort, @validate_against.to_i),
                      "data-miq_observe" => {:url => url_for(:action => 'form_field_changed',
                                                             :id     => "#{record.id || "new"}")}.to_json)

:javascript
  miq_tabs_init('#auth_tabs');

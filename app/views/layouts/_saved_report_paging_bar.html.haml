.col-md-12
  .toolbar-pf-actions
    - action_url = "saved_report_paging"
    - url = url_for(:action => action_url)
    - @pb_occ ||= 0
    - @pb_occ += 1
    - pages ||= {:perpage => @settings[:perpage][:reports],
                :current => 1,
                :total   => @sb[:pages][:total],
                :items   => @sb[:pages][:items]}

    %div{:id => "rpb_div_#{@pb_occ}"}
      .form-group.pull-right{:style => "border-right: 0"}
        %ul.pagination
          %li.first
            / first button
            - if pages[:current] > 1
              %span{:type    => "button",
                    :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                :complete => "miqSparkle(false);",
                                                :url      => "#{action_url}?page=1"),
                    :class   => "fa fa-angle-double-left",
                    :alt     => _("First"),
                    :title   => _("First")}
              %li.prev
                %span{:type    => "button",
                      :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                  :complete => "miqSparkle(false);",
                                                  :url      => "#{action_url}?page=#{pages[:current] - 1}"),
                      :class   => "fa fa-angle-left",
                      :alt     => _("Previous"),
                      :title   => _("Previous")}
            - else
              %li.first.disabled
                %span{:class => "i fa fa-angle-double-left"}
              %li.prev.disabled
                %span{:class => "i fa fa-angle-left"}

            %li
              %span
                - start_number = (pages[:perpage] * pages[:current]) - pages[:perpage] + 1
                - end_number = pages[:perpage] * pages[:current]
                - if start_number == pages[:items]
                  = _("Showing %{start_number} of %{total_items} items") % {:start_number => start_number, :total_items => pages[:items]}
                - else
                  - if end_number > pages[:items]
                    = _("Showing %{start_number}-%{end_number} of %{total_items} items") % {:start_number => start_number, :end_number => pages[:items], :total_items => pages[:items]}
                  - else
                    = _("Showing %{start_number}-%{end_number} of %{total_items} items") % {:start_number => start_number, :end_number => end_number, :total_items => pages[:items]}
                %input{:name => "limitstart", :type => "hidden", :value => "0"}/

            - if pages[:current] < pages[:total]
              %li.next
                %span{:type    => "button",
                      :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                  :complete => "miqSparkle(false);",
                                                  :url      => "#{action_url}?page=#{pages[:current] +1}"),
                      :class   => "i fa fa-angle-right",
                      :alt     => _("Next"),
                      :title   => _("Next")}
              %li.last
                %span{:type    => "button",
                      :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                  :complete => "miqSparkle(false);",
                                                  :url      => "#{action_url}?page=#{pages[:total]}"),
                      :class   => "i fa fa-angle-double-right",
                      :alt     => _("Last"),
                      :title   => _("Last")}
            - else
              %li.next.disabled
                %span{:class => "i fa fa-angle-right"}
              %li.last.disabled
                %span{:class => "i fa fa-angle-double-right"}

      .form-group.pull-right
        = _('Items per page:')
        = select_tag("ppsetting",
                    options_for_select(@pp_choices, pages[:perpage]),
                    "data-width" => "auto",
                    :class       => "selectpicker dropup")
        :javascript
          miqSelectPickerEvent("ppsetting", "#{url}", {beforeSend: true, complete: true})
    = render(:partial => '/layouts/x_form_buttons')
    :javascript
      miqInitSelectPicker();

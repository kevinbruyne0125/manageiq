- @angularForm = true
%form.form-horizontal#form_div{"name"          => "angularForm",
                               "ng-controller" => "hostFormController",
                               "ng-show"       => "afterGet"}
  = render :partial => "layouts/flash_msg"
  - if session[:host_items].nil?
    %div
      %div
        .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
          %label.col-md-2.control-label{"for" => "textInput-markup"}
            = _("Name")
          .col-md-8
            %input.form-control{"type"        => "text",
                                "id"          => "textInput-markup",
                                "name"        => "name",
                                "ng-model"    => "hostModel.name",
                                "maxlength"   => "#{MAX_NAME_LEN}",
                                "miqrequired" => "",
                                "checkchange" => ""}
            %span.help-block{"ng-show" => "angularForm.name.$error.miqrequired"}
              = _("Required")
        .form-group{"ng-class" => "{'has-error': angularForm.hostname.$invalid}"}
          %label.col-md-2.control-label{"for" => "textInput-markup"}
            = _("Hostname (or IPv4 or IPv6 address)")
          .col-md-8
            %input.form-control{"type"        => "text",
                                "id"          => "textInput-markup",
                                "name"        => "hostname",
                                "ng-model"    => "hostModel.hostname",
                                "maxlength"   => "#{MAX_HOSTNAME_LEN}",
                                "miqrequired" => "",
                                "checkchange" => ""}
            %span.help-block{"ng-show" => "angularForm.hostname.$error.miqrequired"}
              = _("Required")
        .form-group
          %label.col-md-2.control-label
            = _("Custom Identifier")
          .col-md-10
            %input#custom_1{"type"        => "text",
                           "name"        => "custom_1",
                           "ng-model"    => "hostModel.custom_1",
                           "maxlength"   => 50,
                           "checkchange" => ""}
        .form-group{"ng-class" => "{'has-error': angularForm.user_assigned_os.$invalid}", "ng-hide" => "hostModel.operating_system"}
          %label.col-md-2.control-label
            = _("Host platform")
          .col-md-10
            = select_tag('user_assigned_os',
                         options_for_select([["<#{_('not specified')}>", nil]] + Host.host_create_os_types.to_a),
                         "ng-model"                    => "hostModel.user_assigned_os",
                         "checkchange"                 => "",
                         "ng-required"                 => "!hostModel.operating_system",
                         "selectpicker-for-select-tag" => "")
            %span.help-block{"ng-show" => "angularForm.name.$error.miqrequired"}
              = _("Required")
        .form-group
          %label.col-md-2.control-label
            = _("IPMI IP Address")
          .col-md-10
            %input#ipmi_address{"type"        => "text",
                           "name"        => "ipmi_address",
                           "ng-model"    => "hostModel.ipmi_address",
                           "maxlength"   => 15,
                           "checkchange" => ""}
        .form-group
          %label.col-md-2.control-label
            = _("MAC Address")
          .col-md-10
            %input#mac_address{"type"        => "text",
                           "name"        => "mac_address",
                           "ng-model"    => "hostModel.mac_address",
                           "maxlength"   => "#{MAX_NAME_LEN}",
                           "checkchange" => ""}

  = render(:partial => "/layouts/angular/multi_auth_credentials_form", :locals => {:record => @host})
  %table{:width => '100%'}
    %tr
      %td{:align => 'right'}
        #buttons_on
          - if @host.id || session[:host_items]
            = button_tag("Save", :class => "btn btn-primary", "ng-click" => "saveClicked()", "ng-disabled" => "angularForm.$pristine || angularForm.$invalid", "ng-class" => "{'btn-disabled': angularForm.$pristine || angularForm.$invalid}")
            = button_tag("Reset", :class => "btn btn-primary", "ng-click" => "resetClicked()", "ng-disabled" => "angularForm.$pristine", "ng-class" => "{'btn-disabled': angularForm.$pristine}")
          - else
            = button_tag("Add", :class => "btn btn-primary", "ng-class" => "{'btn-disabled': !angularForm.$valid}", "ng-click" => "addClicked()", "ng-disabled" => "!angularForm.$valid")
          = button_tag("Cancel", :class => "btn btn-default", "ng-click" => "cancelClicked()")

- unless session[:host_items].nil?
  %h3
    = pluralize(session[:host_items].length,Dictionary::gettext(Host.to_s, :type => :model, :notfound => :titleize))
    =_('Selected')
  =_('Click on a Host to fetch its settings')
  %table.admittable{:height => '75'}
    %tbody
      %tr
        %td
          - if session[:host_items]
            - @embedded = true
            - @gtl_type = @settings[:views][:host]
            = render :partial => 'layouts/gtl'

:javascript
  ManageIQ.angularApplication.value('hostFormId', '#{@host.id || "new"}');
  //angular.bootstrap(jQuery('#form_div'), ['ManageIQ.angularApplication'], { strictDi: true });
  angular.bootstrap(jQuery('#form_div'), ['ManageIQ.angularApplication']);
